---
import MainLayout from '../../layouts/MainLayout.astro';
import PostForm from '../../components/PostForm';
import { PlusCircle } from 'lucide-react';
---

<MainLayout title="Create New Post">
  <div class="container mx-auto px-4 py-8">
    <div class="mb-8">
      <h1 class="text-3xl font-bold flex items-center gap-2">
        <PlusCircle className="w-8 h-8 text-primary" />
        Create New Post
      </h1>
      <p class="text-base-content/70 mt-2">
        Fill out the form below to create a new music release post. You can search for music data to automatically fill in details.
      </p>
    </div>

    <div class="bg-base-100 rounded-box shadow-sm p-6">
      <PostForm client:load isSubmitting={false} onSubmit={async () => {}} />
    </div>
  </div>
</MainLayout>

<script>
  // This script handles the form submission on the client side
  document.addEventListener('DOMContentLoaded', () => {
    // Get the PostForm component instance
    const postForm = document.querySelector('post-form');
    
    if (postForm) {
      // Define the submit handler
      window.handlePostSubmit = async (data) => {
        try {
          const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/posts`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
            credentials: 'include',
          });
          
          if (!response.ok) {
            throw new Error('Failed to create post');
          }
          
          const result = await response.json();
          
          // Redirect to the post detail page or dashboard
          window.location.href = `/dashboard?success=Post created successfully`;
        } catch (error) {
          console.error('Error creating post:', error);
          alert('Failed to create post. Please try again.');
        }
      };
      
      // Set the onSubmit prop on the PostForm component
      postForm.setAttribute('onSubmit', 'handlePostSubmit');
    }
  });
  
  // Check if user is authenticated
  const checkAuth = async () => {
    try {
      const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/auth/user`, {
        credentials: 'include'
      });
      
      if (!response.ok) {
        // Redirect to login if not authenticated
        window.location.href = '/login?error=Please log in to create posts';
      }
    } catch (error) {
      console.error('Auth check error:', error);
      window.location.href = '/login?error=Authentication error';
    }
  };
  
  // Run auth check when page loads
  checkAuth();
</script> 