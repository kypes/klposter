---
import MainLayout from '../../../layouts/MainLayout.astro';
import PostForm from '../../../components/PostForm';
import { Edit } from 'lucide-react';

// Get the post ID from the URL
const { id } = Astro.params;
---

<MainLayout title="Edit Post">
  <div class="container mx-auto px-4 py-8">
    <div class="mb-8">
      <h1 class="text-3xl font-bold flex items-center gap-2">
        <Edit className="w-8 h-8 text-primary" />
        Edit Post
      </h1>
      <p class="text-base-content/70 mt-2">
        Update the details of your music release post.
      </p>
    </div>

    <div class="bg-base-100 rounded-box shadow-sm p-6">
      <PostForm client:load postId={id} isSubmitting={false} onSubmit={async () => {}} />
    </div>
  </div>
</MainLayout>

<script define:vars={{ postId: id }}>
  // This script handles the form submission on the client side
  document.addEventListener('DOMContentLoaded', () => {
    // Get the PostForm component instance
    const postForm = document.querySelector('post-form');
    
    if (postForm) {
      // Define the submit handler
      window.handlePostSubmit = async (data) => {
        try {
          const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/posts/${postId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
            credentials: 'include',
          });
          
          if (!response.ok) {
            throw new Error('Failed to update post');
          }
          
          const result = await response.json();
          
          // Redirect to the post detail page or dashboard
          window.location.href = `/dashboard?success=Post updated successfully`;
        } catch (error) {
          console.error('Error updating post:', error);
          alert('Failed to update post. Please try again.');
        }
      };
      
      // Set the onSubmit prop on the PostForm component
      postForm.setAttribute('onSubmit', 'handlePostSubmit');
    }
  });
  
  // Check if user is authenticated
  const checkAuth = async () => {
    try {
      const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/auth/user`, {
        credentials: 'include'
      });
      
      if (!response.ok) {
        // Redirect to login if not authenticated
        window.location.href = '/login?error=Please log in to edit posts';
      }
    } catch (error) {
      console.error('Auth check error:', error);
      window.location.href = '/login?error=Authentication error';
    }
  };
  
  // Run auth check when page loads
  checkAuth();
</script> 