---
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
}

const { 
  title, 
  description = "KLPoster - Schedule and manage your music release posts for Discord"
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en" data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title} | KLPoster</title>
    
    <!-- Open Graph / Social Media Meta Tags -->
    <meta property="og:title" content={`${title} | KLPoster`} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:image" content="/og-image.png" />
    
    <!-- Preload fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
  </head>
  <body class="min-h-screen bg-base-300 font-sans">
    <header class="bg-base-100 shadow-sm">
      <div class="container mx-auto px-4">
        <div class="navbar">
          <div class="navbar-start">
            <div class="dropdown">
              <label tabindex="0" class="btn btn-ghost lg:hidden">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" />
                </svg>
              </label>
              <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
                <li><a href="/">Home</a></li>
                <li><a href="/dashboard">Dashboard</a></li>
                <li><a href="/posts/create">Create Post</a></li>
                <li><a href="/settings">Settings</a></li>
              </ul>
            </div>
            <a href="/" class="btn btn-ghost normal-case text-xl">
              <span class="text-primary font-bold">KL</span>Poster
            </a>
          </div>
          <div class="navbar-center hidden lg:flex">
            <ul class="menu menu-horizontal px-1">
              <li><a href="/">Home</a></li>
              <li><a href="/dashboard">Dashboard</a></li>
              <li><a href="/posts/create">Create Post</a></li>
              <li><a href="/settings">Settings</a></li>
            </ul>
          </div>
          <div class="navbar-end">
            <div id="auth-status">
              <!-- This will be populated by JavaScript -->
              <a href="/login" class="btn btn-primary">Login with Discord</a>
            </div>
          </div>
        </div>
      </div>
    </header>
    
    <main>
      <slot />
    </main>
    
    <footer class="bg-base-200 py-8 mt-12">
      <div class="container mx-auto px-4">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <div class="mb-4 md:mb-0">
            <p class="text-base-content/70 text-sm">
              &copy; {new Date().getFullYear()} KLPoster. All rights reserved.
            </p>
          </div>
          <div class="flex gap-4">
            <a href="https://github.com/yourusername/klposter" target="_blank" rel="noopener noreferrer" class="btn btn-ghost btn-sm">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
              </svg>
              GitHub
            </a>
            <a href="/docs" class="btn btn-ghost btn-sm">Documentation</a>
          </div>
        </div>
      </div>
    </footer>
  </body>
</html>

<script>
  // Check if user is logged in and update auth status
  const updateAuthStatus = async () => {
    try {
      const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/auth/user`, {
        credentials: 'include'
      });
      
      if (response.ok) {
        const user = await response.json();
        
        // Update auth status with user info
        document.getElementById('auth-status').innerHTML = `
          <div class="dropdown dropdown-end">
            <label tabindex="0" class="btn btn-ghost btn-circle avatar">
              <div class="w-10 rounded-full">
                <img src="${user.avatar || 'https://cdn.discordapp.com/embed/avatars/0.png'}" alt="${user.username}" />
              </div>
            </label>
            <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
              <li>
                <a href="/dashboard" class="justify-between">
                  Dashboard
                </a>
              </li>
              <li><a href="/settings">Settings</a></li>
              <li>
                <a id="logout-button">Logout</a>
              </li>
            </ul>
          </div>
        `;
        
        // Add logout functionality
        document.getElementById('logout-button')?.addEventListener('click', async () => {
          try {
            const logoutResponse = await fetch(`${import.meta.env.PUBLIC_API_URL}/auth/logout`, {
              method: 'POST',
              credentials: 'include',
            });
            
            if (logoutResponse.ok) {
              window.location.href = '/';
            }
          } catch (error) {
            console.error('Logout error:', error);
          }
        });
      }
    } catch (error) {
      console.error('Auth check error:', error);
    }
  };
  
  // Run auth check when page loads
  updateAuthStatus();
  
  // Handle success messages in URL
  document.addEventListener('DOMContentLoaded', () => {
    const urlParams = new URLSearchParams(window.location.search);
    const successMessage = urlParams.get('success');
    const errorMessage = urlParams.get('error');
    
    if (successMessage) {
      alert(successMessage);
      
      // Remove the success parameter from the URL
      urlParams.delete('success');
      const newUrl = window.location.pathname + (urlParams.toString() ? `?${urlParams.toString()}` : '');
      window.history.replaceState({}, '', newUrl);
    }
    
    if (errorMessage) {
      alert(errorMessage);
      
      // Remove the error parameter from the URL
      urlParams.delete('error');
      const newUrl = window.location.pathname + (urlParams.toString() ? `?${urlParams.toString()}` : '');
      window.history.replaceState({}, '', newUrl);
    }
  });
</script>

<style is:global>
  /* Global styles */
  :root {
    --font-sans: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  }
  
  html {
    font-family: var(--font-sans);
    scroll-behavior: smooth;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: hsl(var(--b3));
  }
  
  ::-webkit-scrollbar-thumb {
    background: hsl(var(--p));
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--pf));
  }
</style> 